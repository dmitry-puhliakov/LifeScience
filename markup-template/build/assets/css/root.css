:root {
  --rem-base: 10px;
  --font-size-base: 16px;
  --line-height-base: 1.2;
  --vertical-rhythm: calc(var(--line-height-base) * 1em);
  --color-brand: #637b8c;
  --color-brand-dark: #43545f;
  --color-brand-light: #8da1ae;
  --color-secondary: #2b2e38;
  --base-text-color: #637b8c;
  --base-link-color: #242c32;
  --h1-h6-color: var(--secondary-color);
  --animation-duration: 0.3s;
  --animation-timing-function: ease;
  --input-x: 20px;
  --gutter: 30px;
  --input-color: #4b4a4a;
  --input-placeholder-color: #7e7d7d;
  --input-bg-color: white;
  --input-radius: 3px;
  --input-border-color: #eee;
  --input-focus-border-color: #cdcdcd;
  --form-theme-color: #637b8c;
  --checkbox-size: 18px;
  --radio-size: 18px;
  --label-fz: 13px;
  --label-color: #4b4a4a;
  --error-color: #e04562;
  --error-bg-color: #fadee3;
  --form-col-gutter: 15px;
  --form-row-margin: 22.5px;
  --h1: 3.5rem;
  --h2: 2.8rem;
  --h3: 2.2rem;
  --h4: 2rem;
  --h5: 17px;
  --h6: 16px;
  --btn-y: 10px;
  --btn-x: 20px;
  --btn-b: 1px;
  --btn-r: 3px;
  --btn-fz: 13px;
}

@media (min-width: 812px) and (max-height: 414px) and (orientation: landscape) {
  :root {
    --gutter: 50px;
  }
}

@media (max-width: 768px) {
  :root {
    --h1: 25px;
    --h2: 23px;
    --h3: 20px;
    --h4: 18px;
    --h5: 17px;
    --h6: 16px;
  }
}

@media (max-width: 667px) {
  :root {
    --btn-y: 1rem;
    --btn-x: 2rem;
    --btn-b: 1px;
    --btn-r: 3px;
    --btn-fz: 13px;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
